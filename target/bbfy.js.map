{"version":3,"sources":["bbfy.js"],"names":[],"mappings":"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","file":"bbfy.js","sourcesContent":["/* -*- mode: js2; -*-\n *\n * This file is part of bbfy.\n *\n * Copyright Â© 2015 LShift Services GmbH\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Authors:\n * - Alexander Kahl <alex@lshift.de>\n */\n\n'use strict'; // Not required in ES6, but will appear in generated ES5 code\n\nimport { regex, string, alt, seq, whitespace, optWhitespace } from 'parsimmon';\nimport _ from 'underscore';\n\nfunction translate_tag (tag) {\n  return (text) => `<${tag}>${text}</${tag}>`;\n}\n\nfunction span (style, text) {\n  return `<span style=\"${style}\">${text}</span>`;\n}\n\nconst rule_sets = {\n  strip: {},\n  html: {\n    b: translate_tag('b'),\n    i: translate_tag('i'),\n    u: translate_tag('u'),\n    s: translate_tag('s'),\n    color (text, tag, color = '') {\n      return color.match(/^(#[0-9a-f]{6}|\\w+)$/i) ? span(`color: ${color.toLowerCase()};`, text) : text;\n    },\n    font (text, tag, font = '') {\n      return font.match(/^\\w+$/) ? span(`font-family: ${font};`, text) : text;\n    },\n    size (text, tag, size = '') {\n      return size.match(/^\\d+$/) ? span(`font-size: ${size}px;`, text) : text;\n    },\n    url (text, tag, url = '') {\n      return url.match(/^https?:\\/\\/.+/) ? `<a href=\"${url}\">${text}</a>` : text;\n    },\n    img (url, tag, args) {\n      if (url.match(/^https?:\\/\\/.+/)) {\n        if (args) {\n          const [width = '', height = ''] = (typeof args === 'string')\n                  ? (/(\\d+)x(\\d+)/.exec(args) || []).slice(1)\n                  : [args.width, args.height];\n          if (width.match(/^\\d+$/) && height.match(/^\\d+$/)) {\n            return `<img src=\"${url}\" width=\"${width}\" height=\"${height}\"/>`;\n          }\n        }\n        return `<img src=\"${url}\"/>`;\n      } else { return ''; }\n    }\n  }\n};\n\nconst defaults = {\n  rules: rule_sets.html,\n  unsupported (text) { return text; },\n  lineTags: ['*']\n};\n\nfunction parse (input) {\n  function tokenizer (type) {\n    return (value) => ({ type: type, value: value });\n  }\n  \n  const newline = string('\\n').map(tokenizer('newline'));\n  const name = regex(/[^\\] =]+/);\n  const attribute = string('=').then(name);\n  const open_bracket = string('[');\n  const close_bracket = string(']');\n  const close_qualifier = string('/');\n  const raw = regex(/[^[\\n]+/).map(tokenizer('text'));\n  const garbage = regex(/[\\[\\] ]/).map(tokenizer('text'));\n  \n  const simple_tag = seq(name);\n  const assignment = seq(name, attribute);\n  const complex_tag = seq(name.skip(whitespace), assignment.skip(optWhitespace).many().map(_.object));\n  const tag = complex_tag.or(assignment).or(simple_tag).map(([tag, assignments]) => ({ tag: tag, assignments: assignments }));\n  const open_tag = open_bracket\n          .then(tag)\n          .skip(close_bracket)\n          .map(tokenizer('open-tag'));\n  \n  const close_tag = open_bracket\n          .then(close_qualifier)\n          .then(name)\n          .skip(close_bracket)\n          .map(tokenizer('close-tag'));\n\n  const text = alt(close_tag, open_tag, raw, newline, garbage).many();\n\n  return text.parse(input);\n}\n\nfunction sanitize (lexemes, { lineTags = defaults.lineTags } = defaults) {\n  const { result, sane, tags } = lexemes.reduce((acc, { type, value }) => {\n    const { result, sane, tags } = acc;\n\n    function close (index, close_value, data) {\n      if (index === -1) {\n        return _.extend({}, acc, data);\n      }\n      else if (index === 0) {\n        return _.extend({}, acc, {\n          result: result.concat([close_value]),\n          tags: tags.slice(1)\n        });\n      }\n      else {\n        const close = tags.slice(0, index + 1);\n        return _.extend({}, acc, {\n          result: result.concat(close.map(tag => ({ type: 'close-tag', value: tag }))),\n          tags: tags.slice(index + 1),\n          sane: false\n        });\n      }\n    }\n\n    if (type === 'text') {\n      return _.extend({}, acc, { result: result.concat([{\n        type: type, value: value\n      }]) });\n    }\n    else if (type === 'open-tag') {\n      return _.extend({}, acc, {\n        result: result.concat([{ type: type, value: value }]),\n        tags: [value.tag].concat(tags)\n      });\n    }\n    else if (type === 'close-tag') {\n      return close(tags.indexOf(value), { type: type, value: value }, { sane: false });\n    }\n    else if (type === 'newline') {\n      return close(_.findIndex(tags, (tag) => _.contains(lineTags, tag)),\n                   { type: 'close-tag', value: tags[0] },\n                   { result: result.concat([{ type: 'text', value: value }]) });\n    }\n    else { throw 'Unsupported lexeme ' + type; };\n  }, { result: [], sane: true, tags: [] });\n\n  return { lexemes: result, sane: sane && tags.length === 0, tags: tags };\n}\n\nfunction cst (nodes) {\n  function rec (nodes) {\n    let rest = nodes, acc = [], node;\n    while (rest !== void 0 && rest.length > 0) {\n      [node, ...rest] = rest;\n      const { type, value } = node;\n      if (type === 'text') {\n        acc.push(node);\n      }\n      else if (type === 'open-tag') {\n        let result = rec(rest);\n        acc.push({ type: 'tag', value: value, children: result.result });\n        rest = result.rest;\n      }\n      else if (type === 'close-tag') {\n        return { result: acc, rest: rest };\n      }\n    }\n\n    return { result: acc, rest: rest };\n  }\n\n  return { type: 'root', children: rec(nodes).result };\n}\n\nfunction transform (cst, rules, unsupported) {\n  function convert (text, { tag, assignments }) {\n    return (rules[tag] || unsupported)(text, tag, assignments);\n  }\n  \n  function rec ({ type, value, children }) {\n    if (type === 'text') {\n      return value;\n    }\n    else if (type === 'tag') {\n      return convert(children.reduce((s, child) => s + rec(child), ''), value);\n    }\n    else {\n      return children.reduce((s, child) => s + rec(child), '');\n    }\n  }\n\n  return rec(cst);\n}\n\nconst bbfy = {\n  converter (config = defaults) {\n    const { rules = defaults.rules, unsupported = defaults.unsupported } = config;\n    return (text) => {\n      const result = parse(text, config);\n      if (!result.status) { throw parsimmon.formatError(text, result); }\n      return transform(cst(sanitize(result.value, config).lexemes), rules, unsupported);\n    };\n  },\n  options: defaults,\n  ruleSets: rule_sets,\n  api: { parse: parse, transform: transform, sanitize: sanitize, cst: cst }\n};\n\nexport default bbfy;\n"],"sourceRoot":"/source/"}